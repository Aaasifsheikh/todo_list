{"version":3,"sources":["Componants/Todo.js","actions/index.js","App.js","reducers/todoReducer.js","reducers/index.js","store.jsx","index.js"],"names":["Todo","useState","inputData","setInputData","list","useSelector","state","todoreducer","dispatch","useDispatch","Fragment","className","type","placeholder","value","onChange","event","target","onClick","data","payload","id","Date","getTime","toString","map","elem","App","initialData","todoReducer","action","newList","filter","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAiDeA,EA3CF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAMC,aAAY,SAACC,GAAD,OAAUA,EAAMC,YAAYH,QAC9CI,EAAWC,cAEjB,OACI,cAAC,IAAMC,SAAP,UACK,qBAAKC,UAAU,WAAf,SACL,sBAAKA,UAAU,YAAf,UACA,oDAGE,sBAAKA,UAAU,WAAf,UACE,uBAAOC,KAAK,OAAOD,UAAU,eAAgBE,YAAY,gBAAgBC,MAAOZ,EAAWa,SAAU,SAACC,GACrGb,EAAaa,EAAMC,OAAOH,UAE3B,wBAAQH,UAAU,mCAAmCO,QAAS,kBAAIV,GCvBxDW,EDuByEjB,ECtBrF,CACFU,KAAM,WACNQ,QAAQ,CACPC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAKA,KDkB6FhB,EAAa,KCvBnG,IAACgB,GDuBV,oBAEX,qBAAKR,UAAU,YAAf,SACKP,EAAKqB,KAAI,SAACC,GACP,OACD,sBAAKf,UAAU,WAAf,UACC,6BAAKe,EAAKP,OACV,wBAAQR,UAAU,cAAcO,QAAS,kBAAIV,ECnBhD,CACFI,KAAM,cACNS,GDiBsEK,EAAKL,MAAtE,sBAF8BK,EAAKL,iBEhB7BM,EARH,WACV,OACE,cAAC,IAAMjB,SAAP,UACC,cAAC,EAAD,O,sBCPCkB,EAAY,CACdxB,KAAM,IAmCKyB,EA/BG,WAA8B,IAA7BvB,EAA4B,uDAAtBsB,EAAaE,EAAS,uCAE3C,OAAOA,EAAOlB,MACV,IAAK,WAEL,MAAkBkB,EAAOV,QAAlBC,EAAP,EAAOA,GAAIF,EAAX,EAAWA,KAEX,kCACOb,GADP,IAEIF,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACKiB,GAAGA,EACHF,KAAKA,OAIlB,IAAK,cACD,IAAMY,EAAUzB,EAAMF,KAAK4B,QAAO,SAACN,GAAD,OAASA,EAAKL,KAAOS,EAAOT,MAE9D,kCACOf,GADP,IAEIF,KAAM2B,IAEtB,QACI,OAAOzB,ICvBI2B,EAJKC,YAAgB,CAChC3B,gBCEW4B,EAHDC,YAAYH,EAAcI,OAAOC,8BAAgCD,OAAOC,gCCKtFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.84ab30b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { addTodo, deleteTodo } from '../actions';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\n// import {todoReducer} from '../reducers/todoReducer';\r\nimport \"./todo.css\";\r\n\r\nconst Todo = () => {\r\n \r\n    const [inputData, setInputData] = useState(\"\");\r\n    const list =useSelector((state)=> state.todoreducer.list)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <React.Fragment>\r\n             <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n        <h2>\r\n              Add Your TODO List\r\n              </h2>\r\n          <div className=\"add-item\">\r\n            <input type=\"text\" className=\"form-control\"  placeholder=\"add item here\" value={inputData} onChange={(event)=>{\r\n             setInputData(event.target.value);\r\n            }} />\r\n            <button className=\"btn btn-sm bg-success text-white\" onClick={()=>dispatch(addTodo(inputData), setInputData(''))}>Add</button>\r\n </div>\r\n <div className=\"showItems\">\r\n     {list.map((elem)=>{\r\n         return(\r\n        <div className=\"eachItem\" key={elem.id}>\r\n         <h3>{elem.data}</h3>\r\n         <button className=\"btn btn-sm \" onClick={()=>dispatch(deleteTodo(elem.id))}>Delete</button>\r\n     </div>\r\n         )\r\n         \r\n     })\r\n     \r\n     }\r\n      \r\n     \r\n\r\n </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","export const addTodo=(data)=>{\r\n    return{\r\n        type: \"ADD_TODO\",\r\n        payload:{\r\n         id: new Date().getTime().toString(),\r\n         data:data\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTodo =(id)=>{\r\nreturn{\r\n    type: \"DELETE_TODO\",\r\n    id\r\n}\r\n}","import React from 'react'\nimport \"./App.css\";\nimport Todo from \"./Componants/Todo\"\n\nconst App = () => {\n  return (\n    <React.Fragment>\n     <Todo />\n    </React.Fragment>\n  )\n}\n\nexport default App\n","const initialData={\r\n    list: []\r\n}\r\n\r\n\r\nconst todoReducer=(state=initialData, action)=>{\r\n\r\n    switch(action.type){\r\n        case \"ADD_TODO\":\r\n\r\n        const {id, data} =action.payload;\r\n\r\n        return{\r\n            ...state,\r\n            list:[\r\n                ...state.list,\r\n                {\r\n                     id:id,\r\n                     data:data\r\n                }\r\n            ]\r\n        }\r\n        case \"DELETE_TODO\":\r\n            const newList = state.list.filter((elem)=> elem.id !== action.id)\r\n\r\n            return{\r\n                ...state,\r\n                list :newList\r\n            }\r\ndefault:\r\n    return state; \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default todoReducer;","import todoreducer from \"./todoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todoreducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from \"react-redux\"\nimport App from './App';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}